<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "static SpectrumCalculator.calculateDarkCurrentCorrection(spectrum : FullRangeInterpolatedSpectrum) -&gt; FullRangeInterpolatedSpectrum:SpectrumCalculator.swift">
         <PersistentStrings>
            <PersistentString
               value = "spectrum.spectrumBuffer[i]">
            </PersistentString>
            <PersistentString
               value = "darkCurrent.spectrumBuffer[i]">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FileBrowserContainerViewController.jumpToPath(targetPath : URL) -&gt; ():FileBrowserContainerViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "selectedPath.relativeString">
            </PersistentString>
            <PersistentString
               value = "targetPath.relativeString">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "FullRangeInterpolatedSpectrumParser.parse() -&gt; FullRangeInterpolatedSpectrum:FullRangeInterpolatedSpectrumParser.swift">
         <PersistentStrings>
            <PersistentString
               value = "getNextInt()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "MeasurmentTableViewCell.(export(UIButton) -&gt; ()).(closure #1):MeasurmentTableViewCell.swift">
      </ContextState>
      <ContextState
         contextName = "CommandManager.getWaveLengthts() -&gt; ():CommandManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "InstrumentSettingsCache.sharedInstance.startingWaveLength">
            </PersistentString>
            <PersistentString
               value = "InstrumentSettingsCache.sharedInstance.endingWaveLength">
            </PersistentString>
            <PersistentString
               value = "InstrumentSettingsCache.sharedInstance.vinirStartingWavelength">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "IndicoWriter.innerWriteBasic(spectrum : FullRangeInterpolatedSpectrum, whiteRefrenceSpectrum : FullRangeInterpolatedSpectrum?) -&gt; ():IndicoWriter.swift">
         <PersistentStrings>
            <PersistentString
               value = "spectrum.spectrumHeader.vinirHeader.integrationTime">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "RadioButton.changeButtonBackground() -&gt; ():RadioButton.swift">
         <PersistentStrings>
            <PersistentString
               value = "state">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "URL.isDirectory() -&gt; Bool:URL.swift">
         <PersistentStrings>
            <PersistentString
               value = "test">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
